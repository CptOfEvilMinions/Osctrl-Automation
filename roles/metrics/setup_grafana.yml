######################################################
# Install/Setup Grafana
######################################################
- name: Stat grafana binary
  ansible.builtin.stat:
    path: /usr/sbin/grafana-server
  register: grafana_binary

- name: Install software
  apt:
    name: ['adduser','libfontconfig1']
    state: present
  when: not grafana_binary.stat.exists

- name: Download Grafana
  get_url:
    url: "{{ grafana_dl_url }}"
    dest: "/tmp/grafana_{{ grafana_version }}_amd64.deb"
  when: not grafana_binary.stat.exists

- name: Install Grafana
  apt:
    deb: "/tmp/grafana_{{ grafana_version }}_amd64.deb"
  when: not grafana_binary.stat.exists

- name: Start Grafana
  service:
    name: "grafana-server"
    enabled: yes
    state: restarted

- name: Grafana Health Check
  uri:
    url: "http://127.0.0.1:3000/login"
    follow_redirects: none
    method: GET
  register: grafana_result
  until: grafana_result.status == 200
  retries: 720
  delay: 5
  no_log: true

######################################################
# Setup Grafana datasources
######################################################
- name: Create Prometheus datasource
  community.grafana.grafana_datasource:
    grafana_url: http://localhost:3000
    grafana_user: "admin"
    grafana_password: "admin"
    name: Prometheus
    ds_type: prometheus
    ds_url: http://localhost:9090
    access: proxy
    is_default: true

######################################################
# Setup Grafana dashboards
######################################################
- name: Import Grafana dashboard
  community.grafana.grafana_dashboard:
    grafana_url: http://localhost:3000
    grafana_user: "admin"
    grafana_password: "admin"
    dashboard_id: "{{ item.key }}"
    dashboard_revision: "{{ item.value }}"
    state: present
  with_dict: "{{ grafana_dashboard_ids }}"